<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="unit-test-cpu-metrics-suite.xml" />
	<munit:before-test name="unit-test-cpu-metrics-before-test" doc:id="85954486-281c-4756-ad84-1b7316423632">
		<munit-tools:mock-when doc:name="Mock when POST login request" doc:id="4b38e460-2636-4a39-b9f2-d5747980dd94"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Post Login Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
			<munit-tools:then-return >
				<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/post-login-response.json')]" mediaType="application/json" />
				<munit-tools:attributes value='#[{"statusCode": 200}]' />
			</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Hierarchy Request" doc:id="8601f049-c2be-4302-92a2-1c1a5d5fb357"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Hierarchy Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/get-hierarchy-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Environments Request" doc:id="0a93f444-e8e6-492c-9745-0a30808a2a3d"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Environments Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/coreservices/get-environments-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when Get Applications Request" doc:id="499ea546-79aa-4398-8a10-0ab940f2f411"
				processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Get Applications Request" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload
						value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/cloudhub/get-applications-response.json')]"
						mediaType="application/json" />
					<munit-tools:attributes value='#[{"statusCode": 200}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		<munit-tools:mock-when doc:name="Mock when Get App Stats Request" doc:id="c0e55ea1-5476-4bb0-8ac2-a08d10f30245" processor="http:request" >
			<munit-tools:with-attributes >
				<munit-tools:with-attribute whereValue="Request Stats" attributeName="doc:name" />
			</munit-tools:with-attributes>
			<munit-tools:then-return >
				<munit-tools:payload value="#[MunitTools::getResourceAsString('examples/responses/anypoint/platform/cloudhub/get-app-stats-response.json')]" mediaType="application/json" />
				<munit-tools:attributes value='#[{"statusCode": 200}]' />
			</munit-tools:then-return>
		</munit-tools:mock-when>
	</munit:before-test>
	<munit:test name="get-cpu-metrics-test" doc:id="2d59e154-abb2-4401-8644-c0e72cfa8941" timeOut="1200000">
		<munit:execution >
			<set-variable value="#[MunitTools::getResourceAsString('examples/responses/get-cpu-metrics-response-payload.json')]" doc:name="Set Expected Response Payload" doc:id="ee263c06-cd1f-4701-98a9-6b6e3c3f2971" variableName="expectedResponse" mimeType="application/json" />
			<ee:transform doc:name="Set Mocked Attributes" doc:id="0fd84368-c5bd-4b51-92a8-738ae2d2be96" >
				<ee:message >
					<ee:set-attributes resource="dw/mock-platform-metrics-call-attributes-connected-app.dwl" />
				</ee:message>
				<ee:variables >
				</ee:variables>
			</ee:transform>
			<flow-ref doc:name="Flow-ref to get:\cpu-metrics:cpu-monitoring-api-config" doc:id="a0a07905-82b9-4e42-8bd9-b3502bf215e7" name="get:\cpu-metrics:cpu-monitoring-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert Expected Response" doc:id="72a1d3a6-1a93-4b66-83ac-9096732c9c78" expression='#[payload]' is='#[MunitTools::equalTo(vars.expectedResponse)]' message="The response payload is not the expected" />
		</munit:validation>
	</munit:test>

</mule>
